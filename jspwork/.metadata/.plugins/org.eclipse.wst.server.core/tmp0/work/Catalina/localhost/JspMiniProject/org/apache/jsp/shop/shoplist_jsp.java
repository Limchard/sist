/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.78
 * Generated at: 2023-09-12 04:42:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.shop;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.text.NumberFormat;
import data.dto.ShopDto;
import java.util.List;
import data.dao.ShopDao;

public final class shoplist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("data.dao.ShopDao");
    _jspx_imports_classes.add("data.dto.ShopDto");
    _jspx_imports_classes.add("java.text.NumberFormat");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n");
      out.write("<link href=\"https://fonts.googleapis.com/css2?family=Cute+Font&family=Diphylleia&family=Dokdo&family=Nanum+Brush+Script&family=Nanum+Gothic+Coding&family=Noto+Sans+KR&display=swap\" rel=\"stylesheet\">\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.7.0.js\"></script>\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js\"></script>\n");
      out.write("<title>Insert title here</title>\n");
      out.write("<style type=\"text/css\">\n");
      out.write("	img.photo{\n");
      out.write("		width: 200px;\n");
      out.write("		height: 230px;\n");
      out.write("		border: 1px solid gray;\n");
      out.write("		border-radius: 20px;\n");
      out.write("		margin-bottom: 10px;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	tr{\n");
      out.write("		padding: 10px;\n");
      out.write("	}\n");
      out.write("</style>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("	$(function(){\n");
      out.write("		\n");
      out.write("		$(\"a.godetail\").click(function(){\n");
      out.write("			var shopnum=$(this).attr(\"shopnum\");\n");
      out.write("			//alert(num);\n");
      out.write("			location.href=\"index.jsp?main=shop/detailpage.jsp?shopnum=\"+shopnum;\n");
      out.write("		});\n");
      out.write("	});\n");
      out.write("</script>\n");
      out.write("</head>\n");

	ShopDao dao=new ShopDao();
	List<ShopDto> list=dao.getAllSangpums();

      out.write("\n");
      out.write("<body>\n");
      out.write("<div class=\"container mt-3\">\n");
      out.write("  <h2>상품목록	</h2>\n");
      out.write("  <br>\n");
      out.write("  <!-- Nav tabs -->\n");
      out.write("  <ul class=\"nav nav-tabs\" role=\"tablist\">\n");
      out.write("    <li class=\"nav-item\">\n");
      out.write("      <a class=\"nav-link active\" data-bs-toggle=\"tab\" href=\"#tabs-1\">전체</a>\n");
      out.write("    </li>\n");
      out.write("    <li class=\"nav-item\">\n");
      out.write("      <a class=\"nav-link\" data-bs-toggle=\"tab\" href=\"#tabs-2\">아우터</a>\n");
      out.write("    </li>\n");
      out.write("    <li class=\"nav-item\">\n");
      out.write("      <a class=\"nav-link\" data-bs-toggle=\"tab\" href=\"#tabs-3\">상의</a>\n");
      out.write("    </li>\n");
      out.write("    <li class=\"nav-item\">\n");
      out.write("      <a class=\"nav-link\" data-bs-toggle=\"tab\" href=\"#tabs-4\">하의</a>\n");
      out.write("    </li>\n");
      out.write("    <li class=\"nav-item\">\n");
      out.write("      <a class=\"nav-link\" data-bs-toggle=\"tab\" href=\"#tabs-5\">원피스</a>\n");
      out.write("    </li>\n");
      out.write("    <li class=\"nav-item\">\n");
      out.write("      <a class=\"nav-link\" data-bs-toggle=\"tab\" href=\"#tabs-6\">악세서리</a>\n");
      out.write("    </li>\n");
      out.write("  </ul>\n");
      out.write("\n");
      out.write("  <!-- Tab panes -->\n");
      out.write("  <div class=\"tab-content\">\n");
      out.write("    <div id=\"tabs-1\" class=\"container tab-pane active\"><br>\n");
      out.write("    	<p>\n");
      out.write("    		<table class=\"table table-bordered\" style=\"width: 700px;\">\n");
      out.write("    			<caption align=\"top\"><b>ALL PRODUCT LIST</b></caption>\n");
      out.write("    			<tr>\n");
      out.write("    				");

    					NumberFormat nf=NumberFormat.getCurrencyInstance();
    					int i=0;
    					for(ShopDto dto:list)
    					{
    						String photo=dto.getPhoto();
    						
    						//20~50까지 랜덤 할인율
    						int sale=(int)(Math.random()*31)+20;
    						
      out.write("\n");
      out.write("    						<td>\n");
      out.write("    							<a shopnum=");
      out.print(dto.getShopnum() );
      out.write(" style=\"cursor: pointer;\" class=\"godetail\"><img alt=\"\" src=\"shopsave/");
      out.print(photo);
      out.write("\" class=\"photo\"></a>\n");
      out.write("    							<br>\n");
      out.write("    							");
      out.print(dto.getSangpum() );
      out.write("<br>\n");
      out.write("    							<b style=\"color:red; font-size: 1.2em;\">");
      out.print(sale );
      out.write("%</b>\n");
      out.write("    							<span style=\"float: right;\">\n");
      out.write("    								<div style=\"color: gray; font-size: 12px;\">\n");
      out.write("    									");

    										int price=(int)(dto.getPrice()-(dto.getPrice()*(sale/100.0)));
    									
      out.write("\n");
      out.write("    									<strike>");
      out.print(nf.format(dto.getPrice()) );
      out.write("</strike>\n");
      out.write("    								</div>\n");
      out.write("    								<div style=\"color: black; font-size: 16px;\">\n");
      out.write("    									");
      out.print(nf.format(price) );
      out.write("\n");
      out.write("    								</div>\n");
      out.write("    							</span>\n");
      out.write("    						</td>\n");
      out.write("    						");

    						if((i+1)%4==0)
    						{
      out.write("\n");
      out.write("    							</tr>\n");
      out.write("    							<tr>\n");
      out.write("    						");
}
    						i++;
    						
      out.write("\n");
      out.write("    					");
}
    				
      out.write("\n");
      out.write("    			</tr>\n");
      out.write("    		</table>\n");
      out.write("    	</p>\n");
      out.write("    </div>\n");
      out.write("    <div id=\"tabs-2\" class=\"container tab-pane\"><br>\n");
      out.write("    	<p>\n");
      out.write("    		<table class=\"table table-bordered\" style=\"width: 700px;\">\n");
      out.write("    			<caption align=\"top\"><b>Outer</b></caption>\n");
      out.write("    			<tr>\n");
      out.write("    				");

    					int i1=0;
    					for(ShopDto dto:list)
    					{
    						if(dto.getCategory().equals("아우터"))
    						{
    						String photo=dto.getPhoto();
    						
    						//20~50까지 랜덤 할인율
    						int sale=(int)(Math.random()*31)+20;
    						
      out.write("\n");
      out.write("    						<td>\n");
      out.write("    							<a shopnum=");
      out.print(dto.getShopnum() );
      out.write(" style=\"cursor: pointer;\" class=\"godetail\"><img alt=\"\" src=\"shopsave/");
      out.print(photo);
      out.write("\" class=\"photo\"></a>\n");
      out.write("    							<br>\n");
      out.write("    							");
      out.print(dto.getSangpum() );
      out.write("<br>\n");
      out.write("    							<b style=\"color:red; font-size: 1.2em;\">");
      out.print(sale );
      out.write("%</b>\n");
      out.write("    							<span style=\"float: right;\">\n");
      out.write("    								<div style=\"color: gray; font-size: 12px;\">\n");
      out.write("    									");

    										int price=(int)(dto.getPrice()-(dto.getPrice()*(sale/100.0)));
    									
      out.write("\n");
      out.write("    									<strike>");
      out.print(nf.format(dto.getPrice()) );
      out.write("</strike>\n");
      out.write("    								</div>\n");
      out.write("    								<div style=\"color: black; font-size: 16px;\">\n");
      out.write("    									");
      out.print(nf.format(price) );
      out.write("\n");
      out.write("    								</div>\n");
      out.write("    							</span>\n");
      out.write("    						</td>\n");
      out.write("    						");

    						if((i1+1)%4==0)
    						{
      out.write("\n");
      out.write("    							</tr>\n");
      out.write("    							<tr>\n");
      out.write("    						");
}
    						i1++;
    						
      out.write("\n");
      out.write("    					");
}
    					}
    				
      out.write("\n");
      out.write("    			</tr>\n");
      out.write("    		</table>\n");
      out.write("    	</p>\n");
      out.write("    </div>\n");
      out.write("    <div id=\"tabs-3\" class=\"container tab-pane\"><br>\n");
      out.write("    	<p>\n");
      out.write("    		<table class=\"table table-bordered\" style=\"width: 700px;\">\n");
      out.write("    			<caption align=\"top\"><b>Top</b></caption>\n");
      out.write("    			<tr>\n");
      out.write("    				");

    					int i2=0;
    					for(ShopDto dto:list)
    					{
    						if(dto.getCategory().equals("상의"))
    						{
    						String photo=dto.getPhoto();
    						
    						//20~50까지 랜덤 할인율
    						int sale=(int)(Math.random()*31)+20;
    						
      out.write("\n");
      out.write("    						<td>\n");
      out.write("    							<a shopnum=");
      out.print(dto.getShopnum() );
      out.write(" style=\"cursor: pointer;\" class=\"godetail\"><img alt=\"\" src=\"shopsave/");
      out.print(photo);
      out.write("\" class=\"photo\"></a>\n");
      out.write("    							<br>\n");
      out.write("    							");
      out.print(dto.getSangpum() );
      out.write("<br>\n");
      out.write("    							<b style=\"color:red; font-size: 1.2em;\">");
      out.print(sale );
      out.write("%</b>\n");
      out.write("    							<span style=\"float: right;\">\n");
      out.write("    								<div style=\"color: gray; font-size: 12px;\">\n");
      out.write("    									");

    										int price=(int)(dto.getPrice()-(dto.getPrice()*(sale/100.0)));
    									
      out.write("\n");
      out.write("    									<strike>");
      out.print(nf.format(dto.getPrice()) );
      out.write("</strike>\n");
      out.write("    								</div>\n");
      out.write("    								<div style=\"color: black; font-size: 16px;\">\n");
      out.write("    									");
      out.print(nf.format(price) );
      out.write("\n");
      out.write("    								</div>\n");
      out.write("    							</span>\n");
      out.write("    						</td>\n");
      out.write("    						");

    						if((i2+1)%4==0)
    						{
      out.write("\n");
      out.write("    							</tr>\n");
      out.write("    							<tr>\n");
      out.write("    						");
}
    						i2++;
    						
      out.write("\n");
      out.write("    					");
}
    					}
    				
      out.write("\n");
      out.write("    			</tr>\n");
      out.write("    		</table>\n");
      out.write("    	</p>\n");
      out.write("    </div>\n");
      out.write("    <div id=\"tabs-4\" class=\"container tab-pane\"><br>\n");
      out.write("    	<p>\n");
      out.write("    		<table class=\"table table-bordered\" style=\"width: 700px;\">\n");
      out.write("    			<caption align=\"top\"><b>Bottom</b></caption>\n");
      out.write("    			<tr>\n");
      out.write("    				");

    					int i3=0;
    					for(ShopDto dto:list)
    					{
    						if(dto.getCategory().equals("하의"))
    						{
    						String photo=dto.getPhoto();
    						
    						//20~50까지 랜덤 할인율
    						int sale=(int)(Math.random()*31)+20;
    						
      out.write("\n");
      out.write("    						<td>\n");
      out.write("    							<a shopnum=");
      out.print(dto.getShopnum() );
      out.write(" style=\"cursor: pointer;\" class=\"godetail\"><img alt=\"\" src=\"shopsave/");
      out.print(photo);
      out.write("\" class=\"photo\"></a>\n");
      out.write("    							<br>\n");
      out.write("    							");
      out.print(dto.getSangpum() );
      out.write("<br>\n");
      out.write("    							<b style=\"color:red; font-size: 1.2em;\">");
      out.print(sale );
      out.write("%</b>\n");
      out.write("    							<span style=\"float: right;\">\n");
      out.write("    								<div style=\"color: gray; font-size: 12px;\">\n");
      out.write("    									");

    										int price=(int)(dto.getPrice()-(dto.getPrice()*(sale/100.0)));
    									
      out.write("\n");
      out.write("    									<strike>");
      out.print(nf.format(dto.getPrice()) );
      out.write("</strike>\n");
      out.write("    								</div>\n");
      out.write("    								<div style=\"color: black; font-size: 16px;\">\n");
      out.write("    									");
      out.print(nf.format(price) );
      out.write("\n");
      out.write("    								</div>\n");
      out.write("    							</span>\n");
      out.write("    						</td>\n");
      out.write("    						");

    						if((i3+1)%4==0)
    						{
      out.write("\n");
      out.write("    							</tr>\n");
      out.write("    							<tr>\n");
      out.write("    						");
}
    						i3++;
    						
      out.write("\n");
      out.write("    					");
}
    					}
    				
      out.write("\n");
      out.write("    			</tr>\n");
      out.write("    		</table>\n");
      out.write("    	</p>\n");
      out.write("    </div>\n");
      out.write("    <div id=\"tabs-5\" class=\"container tab-pane\"><br>\n");
      out.write("    	<p>\n");
      out.write("    		<table class=\"table table-bordered\" style=\"width: 700px;\">\n");
      out.write("    			<caption align=\"top\"><b>Accessories</b></caption>\n");
      out.write("    			<tr>\n");
      out.write("    				");

    					int i4=0;
    					for(ShopDto dto:list)
    					{
    						if(dto.getCategory().equals("원피스"))
    						{
    						String photo=dto.getPhoto();
    						
    						//20~50까지 랜덤 할인율
    						int sale=(int)(Math.random()*31)+20;
    						
      out.write("\n");
      out.write("    						<td>\n");
      out.write("    							<a shopnum=");
      out.print(dto.getShopnum() );
      out.write(" style=\"cursor: pointer;\" class=\"godetail\"><img alt=\"\" src=\"shopsave/");
      out.print(photo);
      out.write("\" class=\"photo\"></a>\n");
      out.write("    							<br>\n");
      out.write("    							");
      out.print(dto.getSangpum() );
      out.write("<br>\n");
      out.write("    							<b style=\"color:red; font-size: 1.2em;\">");
      out.print(sale );
      out.write("%</b>\n");
      out.write("    							<span style=\"float: right;\">\n");
      out.write("    								<div style=\"color: gray; font-size: 12px;\">\n");
      out.write("    									");

    										int price=(int)(dto.getPrice()-(dto.getPrice()*(sale/100.0)));
    									
      out.write("\n");
      out.write("    									<strike>");
      out.print(nf.format(dto.getPrice()) );
      out.write("</strike>\n");
      out.write("    								</div>\n");
      out.write("    								<div style=\"color: black; font-size: 16px;\">\n");
      out.write("    									");
      out.print(nf.format(price) );
      out.write("\n");
      out.write("    								</div>\n");
      out.write("    							</span>\n");
      out.write("    						</td>\n");
      out.write("    						");

    						if((i4+1)%4==0)
    						{
      out.write("\n");
      out.write("    							</tr>\n");
      out.write("    							<tr>\n");
      out.write("    						");
}
    						i4++;
    						
      out.write("\n");
      out.write("    					");
}
    					}
    				
      out.write("\n");
      out.write("    			</tr>\n");
      out.write("    		</table>\n");
      out.write("    	</p>\n");
      out.write("    </div>\n");
      out.write("    <div id=\"tabs-6\" class=\"container tab-pane\"><br>\n");
      out.write("    	<p>\n");
      out.write("    		<table class=\"table table-bordered\" style=\"width: 700px;\">\n");
      out.write("    			<caption align=\"top\"><b>Set</b></caption>\n");
      out.write("    			<tr>\n");
      out.write("    				");

    					int i5=0;
    					for(ShopDto dto:list)
    					{
    						if(dto.getCategory().equals("악세서리"))
    						{
    						String photo=dto.getPhoto();
    						
    						//20~50까지 랜덤 할인율
    						int sale=(int)(Math.random()*31)+20;
    						
      out.write("\n");
      out.write("    						<td>\n");
      out.write("    							<a shopnum=");
      out.print(dto.getShopnum() );
      out.write(" style=\"cursor: pointer;\" class=\"godetail\"><img alt=\"\" src=\"shopsave/");
      out.print(photo);
      out.write("\" class=\"photo\"></a>\n");
      out.write("    							<br>\n");
      out.write("    							");
      out.print(dto.getSangpum() );
      out.write("<br>\n");
      out.write("    							<b style=\"color:red; font-size: 1.2em;\">");
      out.print(sale );
      out.write("%</b>\n");
      out.write("    							<span style=\"float: right;\">\n");
      out.write("    								<div style=\"color: gray; font-size: 12px;\">\n");
      out.write("    									");

    										int price=(int)(dto.getPrice()-(dto.getPrice()*(sale/100.0)));
    									
      out.write("\n");
      out.write("    									<strike>");
      out.print(nf.format(dto.getPrice()) );
      out.write("</strike>\n");
      out.write("    								</div>\n");
      out.write("    								<div style=\"color: black; font-size: 16px;\">\n");
      out.write("    									");
      out.print(nf.format(price) );
      out.write("\n");
      out.write("    								</div>\n");
      out.write("    							</span>\n");
      out.write("    						</td>\n");
      out.write("    						");

    						if((i5+1)%4==0)
    						{
      out.write("\n");
      out.write("    							</tr>\n");
      out.write("    							<tr>\n");
      out.write("    						");
}
    						i5++;
    						
      out.write("\n");
      out.write("    					");
}
    					}
    				
      out.write("\n");
      out.write("    			</tr>\n");
      out.write("    		</table>\n");
      out.write("    	</p>\n");
      out.write("    </div>\n");
      out.write("  </div>\n");
      out.write("</div>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
